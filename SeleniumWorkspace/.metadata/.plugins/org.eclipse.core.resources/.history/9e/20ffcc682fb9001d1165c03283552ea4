package rayuduacademy;

import java.util.HashMap;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import rayuduacademy.TestComponents.BaseTest;
import rayuduacademy.pageobjects.ConfirmationPage;
import rayuduacademy.pageobjects.OrderPage;
import rayuduacademy.pageobjects.ProductCatalogue;
import rayuduacademy.pageobjects.cartPage;
import rayuduacademy.pageobjects.checkOutPage;

public class SubmitOrderTest extends BaseTest {

	@Test(dataProvider="getData",groups= {"Purchase"})
	public void submitOrder(HashMap<String,String> input) throws Exception {
		// TODO Auto-generated method stub
			
		ProductCatalogue prodCat=landingPage.loginApplication(input.get("email"),input.get("password"));
		List<WebElement> products=prodCat.getProductList();
		prodCat.addProductToCart(input.get("product"));
		cartPage cp=prodCat.goToCartPage();
		Boolean match=cp.VerifyProductDisplay(input.get("product"));
		Assert.assertTrue(match);
		checkOutPage cop=cp.goToCheckout();
		cop.selectCountry("india");
		ConfirmationPage confirm=cop.submitOrder();
		String confirmMessage=confirm.getconfirmationMessage();
		Assert.assertTrue(confirmMessage.equalsIgnoreCase("THANKYOU FOR THE ORDER."));
		
	}
	
	//TO verify ZARA COAT 3 is displaying in orders page or not
	@Test(dependsOnMethods= {"submitOrder"})
	public void OrderHistoryTest() {
		String productName="ZARA COAT 3";
		ProductCatalogue prodCat=landingPage.loginApplication("vidyarayudu668@gmail.com", "Rahul$469");
		OrderPage orderPage=prodCat.goToOrdersPage();
		Assert.assertTrue(orderPage.verifyOrderDisplay(productName));
	}
	@DataProvider
	public Object[][] getData() {
		HashMap<String,String> map=new HashMap<String,String>();
		map.put("email", "vidyarayudu668@gmail.com");
		map.put("password", "Rahul$469");
		map.put("product", "ZARA COAT 3");
		HashMap<String,String> map1=new HashMap<String,String>();
		map1.put("email", "shetty@gmail.com");
		map1.put("password", "Iamking@000");
		map1.put("product", "ADIDAS ORIGINAL");
		return new Object[][] {{map},{map1}};
	}

}
